name: CI

on:
  push:
    tags:
    - 'v*'

jobs:
  build-unix:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build manylinux Python wheels
        uses: galleon/manylinux-build-action@master
        with:
          python-versions: 'cp37-cp37m cp38-cp38'
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wh_unix
          path: wheelhouse
  build-macos:
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.7, 3.8]
        compiler: [gnu]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install boost package
        run: brew install boost
      - name: Install libomp package
        run: brew install libomp
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        shell: bash
      - name: Build using setup.py
        run: python setup.py sdist bdist_wheel --cpp-extension
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.13
      - name: Test with pytest
        run: |
          pip install --find-links ./dist/ scikit-decide[all] 
          pytest -v -s tests
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wh_macos
          path: dist
  build-windows:
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.7, 3.8]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install torch>=1.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
        shell: pwsh
      - name: Set BOOST_ROOT variable
        run: echo "::set-env name=BOOST_ROOT::$env:BOOST_ROOT_1_72_0"
      - name: Build using setup.py
        run: python setup.py sdist bdist_wheel --cpp-extension
      - name: Test with pytest
        run: |
          pip install --find-links ./dist/ scikit-decide[all] 
          pytest -v -s tests
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wh_windows
          path: dist
  deploy:
    needs: [build-unix, build-macos, build-windows]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download Unix artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: wh_unix
      - name: Download MacOS artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: wh_macos
      - name: Download Windows artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: wh_windows
      - name: Move everything in wheelhouse
        run: mkdir wheelhouse && mv wh_*/*.whl wheelhouse/ && mv wh_windows/*.tar.gz wheelhouse/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          packages_dir: wheelhouse/
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
          packages_dir: wheelhouse/
  build-docs:
    needs: deploy
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: generate documentation
        run: yarn global add vuepress && yarn install && yarn docs:build && touch docs/.vuepress/dist/.nojekyll
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.gh_access_token }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/.vuepress/dist # The folder the action should deploy.
          GIT_CONFIG_EMAIL: guillaume.alleon@gmail.com
          COMMIT_MESSAGE: publish documentation
          CLEAN: true
          SINGLE_COMMIT: true
