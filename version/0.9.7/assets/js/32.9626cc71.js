(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{545:function(e,r,t){"use strict";t.r(r);var a=t(38),n=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"builders-domain-renderability"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#builders-domain-renderability"}},[e._v("#")]),e._v(" builders.domain.renderability")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Domain specification")]),e._v(" "),t("skdecide-summary")],1),e._v(" "),t("h2",{attrs:{id:"renderable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#renderable"}},[e._v("#")]),e._v(" Renderable")]),e._v(" "),t("p",[e._v("A domain must inherit this class if it can be rendered with any kind of visualization.")]),e._v(" "),t("h3",{attrs:{id:"render"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[e._v("#")]),e._v(" render "),t("Badge",{attrs:{text:"Renderable",type:"tip"}})],1),e._v(" "),t("skdecide-signature",{attrs:{name:"render",sig:{params:[{name:"self"},{name:"memory",default:"None",annotation:"Optional[D.T_memory[D.T_state]]"},{name:"**kwargs",annotation:"Any"}],return:"Any"}}}),e._v(" "),t("p",[e._v("Compute a visual render of the given memory (state or history), or the internal one if omitted.")]),e._v(" "),t("p",[e._v("By default, "),t("code",[e._v("Renderable.render()")]),e._v(" provides some boilerplate code and internally calls "),t("code",[e._v("Renderable._render()")]),e._v(". The\nboilerplate code automatically passes the "),t("code",[e._v("_memory")]),e._v(" attribute instead of the memory parameter whenever the latter\nis None.")]),e._v(" "),t("h4",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("memory")]),e._v(": The memory to consider (if None, the internal memory attribute "),t("code",[e._v("_memory")]),e._v(" is used instead).")])]),e._v(" "),t("h4",{attrs:{id:"returns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),t("p",[e._v("A render (e.g. image) or nothing (if the function handles the display directly).")]),e._v(" "),t("h3",{attrs:{id:"render-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render-2"}},[e._v("#")]),e._v(" _render "),t("Badge",{attrs:{text:"Renderable",type:"tip"}})],1),e._v(" "),t("skdecide-signature",{attrs:{name:"_render",sig:{params:[{name:"self"},{name:"memory",default:"None",annotation:"Optional[D.T_memory[D.T_state]]"},{name:"**kwargs",annotation:"Any"}],return:"Any"}}}),e._v(" "),t("p",[e._v("Compute a visual render of the given memory (state or history), or the internal one if omitted.")]),e._v(" "),t("p",[e._v("By default, "),t("code",[e._v("Renderable._render()")]),e._v(" provides some boilerplate code and internally\ncalls "),t("code",[e._v("Renderable._render_from()")]),e._v(". The boilerplate code automatically passes the "),t("code",[e._v("_memory")]),e._v(" attribute instead of\nthe memory parameter whenever the latter is None.")]),e._v(" "),t("h4",{attrs:{id:"parameters-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters-2"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("memory")]),e._v(": The memory to consider (if None, the internal memory attribute "),t("code",[e._v("_memory")]),e._v(" is used instead).")])]),e._v(" "),t("h4",{attrs:{id:"returns-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-2"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),t("p",[e._v("A render (e.g. image) or nothing (if the function handles the display directly).")]),e._v(" "),t("h3",{attrs:{id:"render-from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render-from"}},[e._v("#")]),e._v(" _render_from "),t("Badge",{attrs:{text:"Renderable",type:"tip"}})],1),e._v(" "),t("skdecide-signature",{attrs:{name:"_render_from",sig:{params:[{name:"self"},{name:"memory",annotation:"D.T_memory[D.T_state]"},{name:"**kwargs",annotation:"Any"}],return:"Any"}}}),e._v(" "),t("p",[e._v("Compute a visual render of the given memory (state or history).")]),e._v(" "),t("p",[e._v("This is a helper function called by default from "),t("code",[e._v("Renderable._render()")]),e._v(", the difference being that the\nmemory parameter is mandatory here.")]),e._v(" "),t("h4",{attrs:{id:"parameters-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters-3"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("memory")]),e._v(": The memory to consider.")])]),e._v(" "),t("h4",{attrs:{id:"returns-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#returns-3"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),t("p",[e._v("A render (e.g. image) or nothing (if the function handles the display directly).")])],1)}),[],!1,null,null,null);r.default=n.exports}}]);