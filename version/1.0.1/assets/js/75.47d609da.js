(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{589:function(e,t,a){"use strict";a.r(t);var r=a(38),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"hub-domain-flight-planning-weather-interpolator-weather-tools-interpolator-genericinterpolator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hub-domain-flight-planning-weather-interpolator-weather-tools-interpolator-genericinterpolator"}},[e._v("#")]),e._v(" hub.domain.flight_planning.weather_interpolator.weather_tools.interpolator.GenericInterpolator")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Domain specification")]),e._v(" "),a("skdecide-summary")],1),e._v(" "),a("h2",{attrs:{id:"genericensembleinterpolator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genericensembleinterpolator"}},[e._v("#")]),e._v(" GenericEnsembleInterpolator")]),e._v(" "),a("p",[e._v("Class used to store weather data, interpolate and plot weather forecast from .npz files")]),e._v(" "),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[e._v("#")]),e._v(" Constructor "),a("Badge",{attrs:{text:"GenericEnsembleInterpolator",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"GenericEnsembleInterpolator",sig:{params:[{name:"file_npz"},{name:"time_cut_index",default:"None"},{name:"fields",default:"None"},{name:"time_shift_s",default:"0.0"},{name:"order",default:"1"}]}}}),e._v(" "),a("p",[e._v("Stores the weather data and build the interpolators on grid.")]),e._v(" "),a("h3",{attrs:{id:"interpol-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpol-field"}},[e._v("#")]),e._v(" interpol_field "),a("Badge",{attrs:{text:"GenericInterpolator",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"interpol_field",sig:{params:[{name:"self"},{name:"X"},{name:"field",default:"CONVEXION"}]}}}),e._v(" "),a("p",[e._v("Interpol one field that is present in interpolators for array of 4d points")]),e._v(" "),a("p",[e._v(":param X: array of points [time (in s), alt (in ft), lat, long], or [time (in s), alt (in ft), id-ensemble,\nlat, long]\n:param field: field of weather data to interpolate (could be 'temperature' or 'humidity'\n:return: array of interpolated values")]),e._v(" "),a("h3",{attrs:{id:"transform-long"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-long"}},[e._v("#")]),e._v(" transform_long "),a("Badge",{attrs:{text:"GenericEnsembleInterpolator",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"transform_long",sig:{params:[{name:"self"},{name:"long"}]}}}),e._v(" "),a("p",[e._v("[Deprecated] should be replaced by modulo function...")]),e._v(" "),a("p",[e._v(":param long: array of longitudes\n:return: array of longitude put in positive domain (modulo 360.)")]),e._v(" "),a("h2",{attrs:{id:"genericwindinterpolator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genericwindinterpolator"}},[e._v("#")]),e._v(" GenericWindInterpolator")]),e._v(" "),a("p",[e._v("Class used to store weather data, interpolate and plot weather forecast from .npz files")]),e._v(" "),a("h3",{attrs:{id:"constructor-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor-2"}},[e._v("#")]),e._v(" Constructor "),a("Badge",{attrs:{text:"GenericWindInterpolator",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"GenericWindInterpolator",sig:{params:[{name:"file_npz"},{name:"time_cut_index",default:"None"},{name:"fields",default:"None"},{name:"order_interp",default:"1"},{name:"time_shift_s",default:"0"}]}}}),e._v(" "),a("p",[e._v("Stores the weather data and build the interpolators on grid.")]),e._v(" "),a("h3",{attrs:{id:"interpol-field-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpol-field-2"}},[e._v("#")]),e._v(" interpol_field "),a("Badge",{attrs:{text:"WeatherInterpolator",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"interpol_field",sig:{params:[{name:"self"},{name:"X"},{name:"field",default:"CONVEXION"}]}}}),e._v(" "),a("p",[e._v("Interpol one field that is present in interpolators for array of 4d points")]),e._v(" "),a("p",[e._v(":param X: array of points [time (in s), alt (in ft), lat, long], or [time (in s), alt (in ft), id-ensemble,\nlat, long]\n:param field: field of weather data to interpolate (could be 'temperature' or 'humidity'\n:return: array of interpolated values")]),e._v(" "),a("h3",{attrs:{id:"interpol-wind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpol-wind"}},[e._v("#")]),e._v(" interpol_wind "),a("Badge",{attrs:{text:"WeatherInterpolator",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"interpol_wind",sig:{params:[{name:"self"},{name:"X"}]}}}),e._v(" "),a("p",[e._v("Interpol wind for an array of 4D points")]),e._v(" "),a("p",[e._v(":param X: array of points [time (in s), alt (in ft), lat, long]\n:return: wind vector.")]),e._v(" "),a("h3",{attrs:{id:"interpol-wind-classic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpol-wind-classic"}},[e._v("#")]),e._v(" interpol_wind_classic "),a("Badge",{attrs:{text:"WeatherInterpolator",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"interpol_wind_classic",sig:{params:[{name:"self"},{name:"lat"},{name:"longi"},{name:"alt",default:"35000.0"},{name:"t",default:"0.0"},{name:"index_forecast",default:"0"}]}}}),e._v(" "),a("p",[e._v("Interpolate the wind.\n:param lat: latitude in degree\n:param longi: longitude in degree\n:param alt: altitude in feet\n:param kwargs: other parameters for the given weather data underlying. example : id of the ensemble forecast.\n:return:")]),e._v(" "),a("h3",{attrs:{id:"plot-wind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plot-wind"}},[e._v("#")]),e._v(" plot_wind "),a("Badge",{attrs:{text:"GenericWindInterpolator",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"plot_wind",sig:{params:[{name:"self"},{name:"alt",default:"35000.0"},{name:"down_long",default:"-180.0"},{name:"up_long",default:"180.0"},{name:"down_lat",default:"-90.0"},{name:"up_lat",default:"90.0"},{name:"t",default:"0.0"},{name:"n_lat",default:"180"},{name:"n_long",default:"720"},{name:"index_forecast",default:"0"},{name:"plot_wind",default:"False"},{name:"ax",default:"None"}]}}}),e._v(" "),a("p",[e._v("Plot the wind for a given coordinates window for a given altitude and for one time/or range of time")]),e._v(" "),a("p",[e._v(":param alt: altitude couch to plot (in ft)\n:param down_long: min longitude\n:param up_long: max longitude\n:param down_lat: min latitude\n:param up_lat: max latitude\n:param t: value of time step (in second) or list/array of time step (in s)\n:type t: float or iterable\n:param n_lat: number of latitude discretized steps\n:param n_long: number of longitude discretized steps\n:param plot_wind: plot the vector field\n:param ax: Ax object where to plot the wind (possibily a precomputed basemap or classic ax object)")]),e._v(" "),a("h3",{attrs:{id:"transform-long-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-long-2"}},[e._v("#")]),e._v(" transform_long "),a("Badge",{attrs:{text:"GenericEnsembleInterpolator",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"transform_long",sig:{params:[{name:"self"},{name:"long"}]}}}),e._v(" "),a("p",[e._v("[Deprecated] should be replaced by modulo function...")]),e._v(" "),a("p",[e._v(":param long: array of longitudes\n:return: array of longitude put in positive domain (modulo 360.)")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);