(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{533:function(t,a,e){"use strict";e.r(a);var s=e(38),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guide"}},[t._v("#")]),t._v(" Guide")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#introduction"}},[t._v("Introduction")]),e("ul",[e("li",[e("a",{attrs:{href:"#as-a-domain-developer"}},[t._v("As a domain developer")])]),e("li",[e("a",{attrs:{href:"#as-a-solver-developer"}},[t._v("As a solver developer")])])])]),e("li",[e("a",{attrs:{href:"#getting-started"}},[t._v("Getting started")])]),e("li",[e("a",{attrs:{href:"#how-to"}},[t._v("How to")]),e("ul",[e("li",[e("a",{attrs:{href:"#select-a-domain-to-solve"}},[t._v("Select a domain to solve")])]),e("li",[e("a",{attrs:{href:"#find-compatible-solvers"}},[t._v("Find compatible solvers")])]),e("li",[e("a",{attrs:{href:"#compute-a-solution"}},[t._v("Compute a solution")])]),e("li",[e("a",{attrs:{href:"#test-the-solution"}},[t._v("Test the solution")])]),e("li",[e("a",{attrs:{href:"#clean-up-the-solver"}},[t._v("Clean up the solver")])])])]),e("li",[e("a",{attrs:{href:"#examples"}},[t._v("Examples")]),e("ul",[e("li",[e("a",{attrs:{href:"#notebooks"}},[t._v("Notebooks")])]),e("li",[e("a",{attrs:{href:"#python-scripts"}},[t._v("Python scripts")])]),e("li",[e("a",{attrs:{href:"#playground"}},[t._v("Playground")])])])]),e("li",[e("a",{attrs:{href:"#code-generators"}},[t._v("Code generators")])]),e("li",[e("a",{attrs:{href:"#roadmap"}},[t._v("Roadmap")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Scikit-decide is an AI framework for Reinforcement Learning, Automated Planning and Scheduling.")]),t._v(" "),e("p",[t._v("It is meant for being a one-stop shop solution to formalize decision-making problems, finding compatible solvers among a growing catalog and get the best solution possible. The catalog is a combination of wrapped existing domains/solvers and newly contributed ones.")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/architecture.png"),alt:"Architecture"}}),t._v(" "),e("p",[t._v("Please refer to our "),e("router-link",{attrs:{to:"/install"}},[t._v("installation instructions")]),t._v(" for installing scikit-decide.")],1),t._v(" "),e("h3",{attrs:{id:"as-a-domain-developer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-a-domain-developer"}},[t._v("#")]),t._v(" As a domain developer")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Scikit-decide supports formalizing the problem one characteristic at a time without the need of being an algorithmic expert nor knowing in advance the best kind of solver for this task (RL, planning, scheduling or any hybrid type).")])]),t._v(" "),e("h3",{attrs:{id:"as-a-solver-developer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-a-solver-developer"}},[t._v("#")]),t._v(" As a solver developer")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Scikit-decide provides a meaningful API to interact with domains at the expected level of information, as well as a catalog of domains/solvers to test/benchmark new algorithms.")])]),t._v(" "),e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),e("p",[t._v("Domain characteristics are one of the key concepts in scikit-decide: they are combined on the one hand to define domains, on the other hand to specify the envelope of domains a solver can tackle.")]),t._v(" "),e("p",[t._v("Each characteristic has various levels, from general (high-level) to specialized (low-level) ones, each level inheriting higher-level functions. Any domain fully contained in a solver's envelope is compatible with this solver, unless it violates additional requirements (optional).")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/characteristics.png"),alt:"Characteristics"}}),t._v(" "),e("p",[t._v("Defining a domain to solve is a matter of:")]),t._v(" "),e("ul",[e("li",[t._v("selecting a base domain class ("),e("code",[t._v("Domain")]),t._v(" by default or any pre-made template for typical combinations like "),e("code",[t._v("DeterministicPlanningDomain")]),t._v(")")]),t._v(" "),e("li",[t._v("fine-tuning any necessary characteristic level with something more specialized (lower-level)")]),t._v(" "),e("li",[t._v("auto-generating the code skeleton from the combination above (technically by implementing all abstract methods)")]),t._v(" "),e("li",[t._v("filling the code as needed based on domain expertise")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("When starting a new domain or solver, it is highly recommended to check the "),e("a",{attrs:{href:"#code-generators"}},[t._v("code generators")]),t._v(" for assistance and auto-generation of the skeleton to fill.")])]),t._v(" "),e("p",[t._v("Check "),e("a",{attrs:{href:"#how-to"}},[t._v("How to")]),t._v(" to see how to find compatible solvers and compute a solution, once a domain is defined.")]),t._v(" "),e("h2",{attrs:{id:"how-to"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to"}},[t._v("#")]),t._v(" How to")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Exact prints and outputs may vary depending on which domains/solvers are registered on your system.")])]),t._v(" "),e("h3",{attrs:{id:"select-a-domain-to-solve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#select-a-domain-to-solve"}},[t._v("#")]),t._v(" Select a domain to solve")]),t._v(" "),e("p",[t._v("This step can be skipped if a domain has already been defined. Otherwise, here is how to load one from the catalog of registered domains:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" skdecide "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" utils\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_registered_domains"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# prints: ['GymDomain', 'MasterMind', 'Maze', 'RockPaperScissors', ...]")]),t._v("\n\nMyDomain "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_registered_domain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Maze'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"find-compatible-solvers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find-compatible-solvers"}},[t._v("#")]),t._v(" Find compatible solvers")]),t._v(" "),e("p",[t._v("This step can be skipped if a solver is already known to be compatible and selected as best candidate. Otherwise, here is how to find all compatible solvers:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("compatible_solvers "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match_solvers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compatible_solvers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# prints: [<class 'skdecide.hub.solver.lazy_astar.lazy_astar.LazyAstar'>, ...]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# select Lazy A* solver and instanciate with default parameters")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" skdecide"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hub"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("solver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lazy_astar "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" LazyAstar\nmysolver "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LazyAstar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"compute-a-solution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compute-a-solution"}},[t._v("#")]),t._v(" Compute a solution")]),t._v(" "),e("p",[t._v("Here is how to solve "),e("code",[t._v("MyDomain")]),t._v(" with "),e("code",[t._v("mysolver")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("solve_with"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"test-the-solution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-the-solution"}},[t._v("#")]),t._v(" Test the solution")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Simple case (one basic rollout)")]),t._v("\nutils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rollout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example of additional rollout parameters")]),t._v("\nutils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rollout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_episodes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_steps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_framerate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("In the example of the Maze solved with Lazy A*, the goal (in green) should be reached by the agent (in blue):")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/maze.png"),alt:"Maze"}}),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("The rendering of the maze is done in a separate window when running in a local python script.\nTo get a similar result in a jupyter notebook, add a line")]),t._v(" "),e("div",{staticClass:"language-jupyter extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("%matplotlib qt\n")])])]),e("p",[t._v("before calling "),e("code",[t._v("rollout()")]),t._v(". See also the available "),e("router-link",{attrs:{to:"/notebooks"}},[t._v("tutorial notebooks")]),t._v("\nto know how to render the maze inline.")],1)]),t._v(" "),e("h3",{attrs:{id:"clean-up-the-solver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clean-up-the-solver"}},[t._v("#")]),t._v(" Clean up the solver")]),t._v(" "),e("p",[t._v("Some solvers (especially parallel C++ ones) need to be properly cleaned once used.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_cleanup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Note that this is automatically done if you use the solver within a "),e("code",[t._v("with")]),t._v(" statement:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" LazyAstar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("solve_with"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rollout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mysolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("h3",{attrs:{id:"notebooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notebooks"}},[t._v("#")]),t._v(" Notebooks")]),t._v(" "),e("p",[t._v("Go to the dedicated "),e("router-link",{attrs:{to:"/notebooks"}},[t._v("Notebooks")]),t._v(" page to see a curated list of notebooks recommended to start with scikit-decide.")],1),t._v(" "),e("h3",{attrs:{id:"python-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-scripts"}},[t._v("#")]),t._v(" Python scripts")]),t._v(" "),e("p",[t._v("More examples can be found in the "),e("code",[t._v("examples/")]),t._v(" folder, showing how to import or define a domain, and how to run or solve it. Most of the examples rely on scikit-decide Hub, an extensible catalog of domains/solvers.")]),t._v(" "),e("h3",{attrs:{id:"playground"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#playground"}},[t._v("#")]),t._v(" Playground")]),t._v(" "),e("p",[t._v("The best example to try out scikit-decide capabilities might be "),e("code",[t._v("examples/full_multisolve.py")]),t._v(". This interactive console experience makes it easy to pick a domain among a pre-defined catalog selection:")]),t._v(" "),e("ul",[e("li",[t._v("Simple Grid World")]),t._v(" "),e("li",[t._v("Maze")]),t._v(" "),e("li",[t._v("Mastermind")]),t._v(" "),e("li",[t._v("Cart Pole (OpenAI Gym)")]),t._v(" "),e("li",[t._v("Mountain Car continuous (OpenAI Gym)")]),t._v(" "),e("li",[t._v("ATARI Pacman (OpenAI Gym)")])]),t._v(" "),e("p",[t._v("...and then solve it with any compatible solver (detected automatically) among following selection:")]),t._v(" "),e("ul",[e("li",[t._v("Random walk")]),t._v(" "),e("li",[t._v("Simple greedy")]),t._v(" "),e("li",[t._v("Lazy A* (classical planning)")]),t._v(" "),e("li",[t._v("PPO: Proximal Policy Optimization (deep reinforcement learning)")]),t._v(" "),e("li",[t._v("POMCP: Partially Observable Monte-Carlo Planning (online planning for POMDP)")]),t._v(" "),e("li",[t._v("CGP: Cartesian Genetic Programming (evolution strategy)")]),t._v(" "),e("li",[t._v("IW: Iterated Width search (width-based planning)")])]),t._v(" "),e("p",[e("strong",[t._v("Note")]),t._v(": some requirements declared in above solvers still need fine-tuning, so in some cases an auto-detected compatible solver may still be unable to solve a domain (for now).")]),t._v(" "),e("p",[t._v("These combinations are particularly efficient if you want to try them out:")]),t._v(" "),e("ul",[e("li",[t._v("Simple Grid World -> Lazy A*")]),t._v(" "),e("li",[t._v("Maze -> Lazy A*")]),t._v(" "),e("li",[t._v("Mastermind -> POMCP: Partially Observable Monte-Carlo Planning")]),t._v(" "),e("li",[t._v("Cart Pole -> PPO: Proximal Policy Optimization")]),t._v(" "),e("li",[t._v("Mountain Car continuous -> CGP: Cartesian Genetic Programming")]),t._v(" "),e("li",[t._v("ATARI Pacman -> Random walk")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Some domains/solvers might require extra manual setup steps to work at 100%.\nIn the future, each scikit-decide hub entry might have a dedicated help page to list them, but in the meantime please refer to this:")]),t._v(" "),e("ul",[e("li",[t._v("OpenAI Gym domains: "),e("a",{attrs:{href:"http://gym.openai.com/docs/#installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAI Gym"),e("OutboundLink")],1),t._v(" for loading Gym environments not included by default (e.g. atari games).")])])]),t._v(" "),e("h2",{attrs:{id:"code-generators"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-generators"}},[t._v("#")]),t._v(" Code generators")]),t._v(" "),e("p",[t._v("Go to "),e("router-link",{attrs:{to:"/codegen"}},[t._v("Code generators")]),t._v(" for assistance when creating a new domain or solver.")],1),t._v(" "),e("h2",{attrs:{id:"roadmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#roadmap"}},[t._v("#")]),t._v(" Roadmap")]),t._v(" "),e("p",[t._v("Following features will be added to scikit-decide soon:")]),t._v(" "),e("ul",[e("li",[t._v("Scheduling API")]),t._v(" "),e("li",[t._v("PDDL parser")])])])}),[],!1,null,null,null);a.default=o.exports}}]);