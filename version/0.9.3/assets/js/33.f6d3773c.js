(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{546:function(t,e,s){"use strict";s.r(e);var a=s(38),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"builders-domain-scheduling-modes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#builders-domain-scheduling-modes"}},[t._v("#")]),t._v(" builders.domain.scheduling.modes")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#varyingmodeconsumption"}},[t._v("VaryingModeConsumption")]),s("ul",[s("li",[s("a",{attrs:{href:"#constructor-badge-text-varyingmodeconsumption-type-tip"}},[t._v("Constructor "),s("Badge",{attrs:{text:"VaryingModeConsumption",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-at-time-badge-text-modeconsumption-type-warn"}},[t._v("get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-at-time-badge-text-modeconsumption-type-warn"}},[t._v("_get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1)])])]),s("li",[s("a",{attrs:{href:"#constantmodeconsumption"}},[t._v("ConstantModeConsumption")]),s("ul",[s("li",[s("a",{attrs:{href:"#constructor-badge-text-constantmodeconsumption-type-tip"}},[t._v("Constructor "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-badge-text-constantmodeconsumption-type-tip"}},[t._v("get_resource_need "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-at-time-badge-text-modeconsumption-type-warn"}},[t._v("get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-badge-text-constantmodeconsumption-type-tip"}},[t._v("_get_resource_need "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-resource-need-at-time-badge-text-modeconsumption-type-warn"}},[t._v("_get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1)])])]),s("li",[s("a",{attrs:{href:"#multimode"}},[t._v("MultiMode")]),s("ul",[s("li",[s("a",{attrs:{href:"#get-tasks-ids-badge-text-multimode-type-tip"}},[t._v("_get_tasks_ids "),s("Badge",{attrs:{text:"MultiMode",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-tasks-modes-badge-text-multimode-type-tip"}},[t._v("_get_tasks_modes "),s("Badge",{attrs:{text:"MultiMode",type:"tip"}})],1)])])]),s("li",[s("a",{attrs:{href:"#singlemode"}},[t._v("SingleMode")]),s("ul",[s("li",[s("a",{attrs:{href:"#get-tasks-ids-badge-text-multimode-type-warn"}},[t._v("_get_tasks_ids "),s("Badge",{attrs:{text:"MultiMode",type:"warn"}})],1)]),s("li",[s("a",{attrs:{href:"#get-tasks-mode-badge-text-singlemode-type-tip"}},[t._v("_get_tasks_mode "),s("Badge",{attrs:{text:"SingleMode",type:"tip"}})],1)]),s("li",[s("a",{attrs:{href:"#get-tasks-modes-badge-text-multimode-type-warn"}},[t._v("_get_tasks_modes "),s("Badge",{attrs:{text:"MultiMode",type:"warn"}})],1)])])])])]),s("p"),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("skdecide-summary")],1),t._v(" "),s("h2",{attrs:{id:"varyingmodeconsumption"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#varyingmodeconsumption"}},[t._v("#")]),t._v(" VaryingModeConsumption")]),t._v(" "),s("p",[t._v("Defines the most generic type of mode.")]),t._v(" "),s("h3",{attrs:{id:"constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor "),s("Badge",{attrs:{text:"VaryingModeConsumption",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"VaryingModeConsumption",sig:{params:[{name:"mode_dict",annotation:"Dict[str, List[int]]"}]}}}),t._v(" "),s("p",[t._v("Initialize self.  See help(type(self)) for accurate signature.")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need-at-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need-at-time"}},[t._v("#")]),t._v(" get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"get_resource_need_at_time",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"},{name:"time",annotation:"int"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource at the given time.\nNote that the time should be the time from the start of the execution of the task (starting from 0).")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need-at-time-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need-at-time-2"}},[t._v("#")]),t._v(" _get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_resource_need_at_time",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"},{name:"time",annotation:"int"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource at the given time.\nNote that the time should be the time from the start of the execution of the task (starting from 0).")]),t._v(" "),s("h2",{attrs:{id:"constantmodeconsumption"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constantmodeconsumption"}},[t._v("#")]),t._v(" ConstantModeConsumption")]),t._v(" "),s("p",[t._v("Defines a mode where the resource consumption is constant throughout\nthe duration of the task.")]),t._v(" "),s("h3",{attrs:{id:"constructor-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor-2"}},[t._v("#")]),t._v(" Constructor "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"ConstantModeConsumption",sig:{params:[{name:"mode_dict",annotation:"Dict[str, int]"}]}}}),t._v(" "),s("p",[t._v("Initialize self.  See help(type(self)) for accurate signature.")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need"}},[t._v("#")]),t._v(" get_resource_need "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"get_resource_need",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource.")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need-at-time-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need-at-time-3"}},[t._v("#")]),t._v(" get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"get_resource_need_at_time",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"},{name:"time",annotation:"int"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource at the given time.\nNote that the time should be the time from the start of the execution of the task (starting from 0).")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need-2"}},[t._v("#")]),t._v(" _get_resource_need "),s("Badge",{attrs:{text:"ConstantModeConsumption",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_resource_need",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource.")]),t._v(" "),s("h3",{attrs:{id:"get-resource-need-at-time-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-resource-need-at-time-4"}},[t._v("#")]),t._v(" _get_resource_need_at_time "),s("Badge",{attrs:{text:"ModeConsumption",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_resource_need_at_time",sig:{params:[{name:"self"},{name:"resource_name",annotation:"str"},{name:"time",annotation:"int"}]}}}),t._v(" "),s("p",[t._v("Return the resource consumption for the given resource at the given time.\nNote that the time should be the time from the start of the execution of the task (starting from 0).")]),t._v(" "),s("h2",{attrs:{id:"multimode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multimode"}},[t._v("#")]),t._v(" MultiMode")]),t._v(" "),s("p",[t._v("A domain must inherit this class if tasks can be done in 1 or more modes.")]),t._v(" "),s("h3",{attrs:{id:"get-tasks-ids"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tasks-ids"}},[t._v("#")]),t._v(" _get_tasks_ids "),s("Badge",{attrs:{text:"MultiMode",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_tasks_ids",sig:{params:[{name:"self"}],return:"Union[Set[int], Dict[int, Any], List[int]]"}}}),t._v(" "),s("p",[t._v("Return a set or dict of int = id of tasks")]),t._v(" "),s("h3",{attrs:{id:"get-tasks-modes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tasks-modes"}},[t._v("#")]),t._v(" _get_tasks_modes "),s("Badge",{attrs:{text:"MultiMode",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_tasks_modes",sig:{params:[{name:"self"}],return:"Dict[int, Dict[int, ModeConsumption]]"}}}),t._v(" "),s("p",[t._v("Return a nested dictionary where the first key is a task id and the second key is a mode id.\nThe value is a Mode object defining the resource consumption.\nIf the domain is an instance of VariableResourceConsumption, VaryingModeConsumption objects should be used.\nIf this is not the case (i.e. the domain is an instance of ConstantResourceConsumption),\nthen ConstantModeConsumption should be used.")]),t._v(" "),s("p",[t._v("E.g. with constant resource consumption\n{\n12: {\n1: ConstantModeConsumption({'rt_1': 2, 'rt_2': 0, 'ru_1': 1}),\n2: ConstantModeConsumption({'rt_1': 0, 'rt_2': 3, 'ru_1': 1}),\n}\n}")]),t._v(" "),s("p",[t._v("E.g. with time varying resource consumption\n{\n12: {\n1: VaryingModeConsumption({'rt_1': [2,2,2,2,3], 'rt_2': [0,0,0,0,0], 'ru_1': [1,1,1,1,1]}),\n2: VaryingModeConsumption({'rt_1': [1,1,1,1,2,2,2], 'rt_2': [0,0,0,0,0,0,0], 'ru_1': [1,1,1,1,1,1,1]}),\n}\n}")]),t._v(" "),s("h2",{attrs:{id:"singlemode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#singlemode"}},[t._v("#")]),t._v(" SingleMode")]),t._v(" "),s("p",[t._v("A domain must inherit this class if ALL tasks only have 1 possible execution mode.")]),t._v(" "),s("h3",{attrs:{id:"get-tasks-ids-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tasks-ids-2"}},[t._v("#")]),t._v(" _get_tasks_ids "),s("Badge",{attrs:{text:"MultiMode",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_tasks_ids",sig:{params:[{name:"self"}],return:"Union[Set[int], Dict[int, Any], List[int]]"}}}),t._v(" "),s("p",[t._v("Return a set or dict of int = id of tasks")]),t._v(" "),s("h3",{attrs:{id:"get-tasks-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tasks-mode"}},[t._v("#")]),t._v(" _get_tasks_mode "),s("Badge",{attrs:{text:"SingleMode",type:"tip"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_tasks_mode",sig:{params:[{name:"self"}],return:"Dict[int, ModeConsumption]"}}}),t._v(" "),s("p",[t._v("Return a dictionary where the key is a task id and the value is a ModeConsumption object defining\nthe resource consumption.\nIf the domain is an instance of VariableResourceConsumption, VaryingModeConsumption objects should be used.\nIf this is not the case (i.e. the domain is an instance of ConstantResourceConsumption),\nthen ConstantModeConsumption should be used.")]),t._v(" "),s("p",[t._v("E.g. with constant resource consumption\n{\n12: ConstantModeConsumption({'rt_1': 2, 'rt_2': 0, 'ru_1': 1})\n}")]),t._v(" "),s("p",[t._v("E.g. with time varying resource consumption\n{\n12: VaryingModeConsumption({'rt_1': [2,2,2,2,3], 'rt_2': [0,0,0,0,0], 'ru_1': [1,1,1,1,1]})\n}")]),t._v(" "),s("h3",{attrs:{id:"get-tasks-modes-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tasks-modes-2"}},[t._v("#")]),t._v(" _get_tasks_modes "),s("Badge",{attrs:{text:"MultiMode",type:"warn"}})],1),t._v(" "),s("skdecide-signature",{attrs:{name:"_get_tasks_modes",sig:{params:[{name:"self"}],return:"Dict[int, Dict[int, ModeConsumption]]"}}}),t._v(" "),s("p",[t._v("Return a nested dictionary where the first key is a task id and the second key is a mode id.\nThe value is a Mode object defining the resource consumption.")])],1)}),[],!1,null,null,null);e.default=n.exports}}]);