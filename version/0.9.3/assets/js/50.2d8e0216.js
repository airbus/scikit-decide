(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{562:function(e,t,a){"use strict";a.r(t);var s=a(38),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"builders-domain-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#builders-domain-value"}},[e._v("#")]),e._v(" builders.domain.value")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#rewards"}},[e._v("Rewards")]),a("ul",[a("li",[a("a",{attrs:{href:"#check-value-badge-text-rewards-type-tip"}},[e._v("check_value "),a("Badge",{attrs:{text:"Rewards",type:"tip"}})],1)]),a("li",[a("a",{attrs:{href:"#check-value-badge-text-rewards-type-tip"}},[e._v("_check_value "),a("Badge",{attrs:{text:"Rewards",type:"tip"}})],1)])])]),a("li",[a("a",{attrs:{href:"#positivecosts"}},[e._v("PositiveCosts")]),a("ul",[a("li",[a("a",{attrs:{href:"#check-value-badge-text-rewards-type-warn"}},[e._v("check_value "),a("Badge",{attrs:{text:"Rewards",type:"warn"}})],1)]),a("li",[a("a",{attrs:{href:"#check-value-badge-text-rewards-type-warn"}},[e._v("_check_value "),a("Badge",{attrs:{text:"Rewards",type:"warn"}})],1)]),a("li",[a("a",{attrs:{href:"#is-positive-badge-text-positivecosts-type-tip"}},[e._v("_is_positive "),a("Badge",{attrs:{text:"PositiveCosts",type:"tip"}})],1)])])])])]),a("p"),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("skdecide-summary")],1),e._v(" "),a("h2",{attrs:{id:"rewards"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rewards"}},[e._v("#")]),e._v(" Rewards")]),e._v(" "),a("p",[e._v("A domain must inherit this class if it sends rewards (positive and/or negative).")]),e._v(" "),a("h3",{attrs:{id:"check-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-value"}},[e._v("#")]),e._v(" check_value "),a("Badge",{attrs:{text:"Rewards",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"check_value",sig:{params:[{name:"self"},{name:"value",annotation:"Value[D.T_value]"}],return:"bool"}}}),e._v(" "),a("p",[e._v("Check that a value is compliant with its reward specification.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("This function returns always True by default because any kind of reward should be accepted at this level.")])]),e._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("value")]),e._v(": The value to check.")])]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("True if the value is compliant (False otherwise).")]),e._v(" "),a("h3",{attrs:{id:"check-value-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-value-2"}},[e._v("#")]),e._v(" _check_value "),a("Badge",{attrs:{text:"Rewards",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"_check_value",sig:{params:[{name:"self"},{name:"value",annotation:"Value[D.T_value]"}],return:"bool"}}}),e._v(" "),a("p",[e._v("Check that a value is compliant with its reward specification.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("This function returns always True by default because any kind of reward should be accepted at this level.")])]),e._v(" "),a("h4",{attrs:{id:"parameters-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-2"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("value")]),e._v(": The value to check.")])]),e._v(" "),a("h4",{attrs:{id:"returns-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-2"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("True if the value is compliant (False otherwise).")]),e._v(" "),a("h2",{attrs:{id:"positivecosts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#positivecosts"}},[e._v("#")]),e._v(" PositiveCosts")]),e._v(" "),a("p",[e._v("A domain must inherit this class if it sends only positive costs (i.e. negative rewards).")]),e._v(" "),a("p",[e._v("Having only positive costs is a required assumption for certain solvers to work, such as classical planners.")]),e._v(" "),a("h3",{attrs:{id:"check-value-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-value-3"}},[e._v("#")]),e._v(" check_value "),a("Badge",{attrs:{text:"Rewards",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"check_value",sig:{params:[{name:"self"},{name:"value",annotation:"Value[D.T_value]"}],return:"bool"}}}),e._v(" "),a("p",[e._v("Check that a value is compliant with its reward specification.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("This function returns always True by default because any kind of reward should be accepted at this level.")])]),e._v(" "),a("h4",{attrs:{id:"parameters-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-3"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("value")]),e._v(": The value to check.")])]),e._v(" "),a("h4",{attrs:{id:"returns-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-3"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("True if the value is compliant (False otherwise).")]),e._v(" "),a("h3",{attrs:{id:"check-value-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-value-4"}},[e._v("#")]),e._v(" _check_value "),a("Badge",{attrs:{text:"Rewards",type:"warn"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"_check_value",sig:{params:[{name:"self"},{name:"value",annotation:"Value[D.T_value]"}],return:"bool"}}}),e._v(" "),a("p",[e._v("Check that a value is compliant with its cost specification (must be positive).")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("This function calls "),a("code",[e._v("PositiveCost._is_positive()")]),e._v(" to determine if a value is positive (can be overridden for\nadvanced value types).")])]),e._v(" "),a("h4",{attrs:{id:"parameters-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-4"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("value")]),e._v(": The value to check.")])]),e._v(" "),a("h4",{attrs:{id:"returns-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-4"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("True if the value is compliant (False otherwise).")]),e._v(" "),a("h3",{attrs:{id:"is-positive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-positive"}},[e._v("#")]),e._v(" _is_positive "),a("Badge",{attrs:{text:"PositiveCosts",type:"tip"}})],1),e._v(" "),a("skdecide-signature",{attrs:{name:"_is_positive",sig:{params:[{name:"self"},{name:"cost",annotation:"D.T_value"}],return:"bool"}}}),e._v(" "),a("p",[e._v("Determine if a value is positive (can be overridden for advanced value types).")]),e._v(" "),a("h4",{attrs:{id:"parameters-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-5"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("cost")]),e._v(": The cost to evaluate.")])]),e._v(" "),a("h4",{attrs:{id:"returns-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns-5"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("True if the cost is positive (False otherwise).")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);