(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{533:function(s,t,e){"use strict";e.r(t);var a=e(38),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("skdecide-spec",{attrs:{isSolver:""},scopedSlots:s._u([{key:"Solver",fn:function(){return[e("p",[s._v("This is the highest level solver class (inheriting top-level class for each mandatory solver characteristic).")]),s._v(" "),e("p",[s._v("This helper class can be used as the main base class for solvers.")]),s._v(" "),e("p",[s._v("Typical use:")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MySolver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Solver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("p",[s._v('with "..." replaced when needed by a number of classes from following domain characteristics (the ones in\nparentheses are optional):')]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("(assessability)")]),s._v(": Utilities -> QValues")]),s._v(" "),e("li",[e("strong",[s._v("(policy)")]),s._v(": Policies -> UncertainPolicies -> DeterministicPolicies")]),s._v(" "),e("li",[e("strong",[s._v("(restorability)")]),s._v(": Restorable")])])]},proxy:!0},{key:"DeterministicPolicySolver",fn:function(){return[e("p",[s._v("This is a typical deterministic policy solver class.")]),s._v(" "),e("p",[s._v("This helper class can be used as an alternate base class for domains, inheriting the following:")]),s._v(" "),e("ul",[e("li",[s._v("Solver")]),s._v(" "),e("li",[s._v("DeterministicPolicies")])]),s._v(" "),e("p",[s._v("Typical use:")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MySolver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DeterministicPolicySolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("It is also possible to refine any alternate base class, like for instance:")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MySolver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DeterministicPolicySolver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" QValues"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])]},proxy:!0},{key:"Utilities",fn:function(){return[e("p",[s._v("A solver must inherit this class if it can provide the utility function (i.e. value function).")])]},proxy:!0},{key:"QValues",fn:function(){return[e("p",[s._v("A solver must inherit this class if it can provide the Q function (i.e. action-value function).")])]},proxy:!0},{key:"FromInitialState",fn:function(){return[e("p",[s._v('"A solver must inherit this class if it can solve only from the initial state')])]},proxy:!0},{key:"FromAnyState",fn:function(){return[e("p",[s._v("A solver must inherit this class if it can solve from any given state.")])]},proxy:!0},{key:"ApplicableActions",fn:function(){return[e("p",[s._v("A solver must inherit this class if he can use information about applicable action.")]),s._v(" "),e("p",[s._v("This characteristic will be checked during rollout so that "),e("code",[s._v("retrieve_applicable_actions()")]),s._v(" will be called before\neach call to "),e("code",[s._v("step()")]),s._v(". For instance, this is the case for solvers using action masks (see "),e("code",[s._v("Maskable")]),s._v(").")])]},proxy:!0},{key:"Maskable",fn:function(){return[e("p",[s._v("A solver must inherit this class if he can use action masks to sample actions.")]),s._v(" "),e("p",[s._v("For instance, it can be the case for wrappers around RL solvers like "),e("code",[s._v("sb3_contrib.MaskablePPO")]),s._v(" or "),e("code",[s._v("ray.rllib")]),s._v(" with\ncustom model making use of action masking.")]),s._v(" "),e("p",[s._v("An action mask is a format for specifying applicable actions when the action space is enumerable and finite. It is\nan array with 0's (for non-applicable actions) and 1's (for applicable actions). See "),e("code",[s._v("Events.get_action_mask()")]),s._v(" for\nmore information.")])]},proxy:!0},{key:"ParallelSolver",fn:function(){return[e("p",[s._v("A solver must inherit this class if it wants to call several cloned parallel domains in separate concurrent processes.\nThe solver is meant to be called either within a 'with' context statement, or to be cleaned up using the close() method.")])]},proxy:!0},{key:"Policies",fn:function(){return[e("p",[s._v("A solver must inherit this class if it computes a stochastic policy as part of the solving process.")])]},proxy:!0},{key:"UncertainPolicies",fn:function(){return[e("p",[s._v("A solver must inherit this class if it computes a stochastic policy (providing next action distribution\nexplicitly) as part of the solving process.")])]},proxy:!0},{key:"DeterministicPolicies",fn:function(){return[e("p",[s._v("A solver must inherit this class if it computes a deterministic policy as part of the solving process.")])]},proxy:!0},{key:"Restorable",fn:function(){return[e("p",[s._v("A solver must inherit this class if its state can be saved and reloaded (to continue computation later on or\nreuse its solution).")])]},proxy:!0}])})],1)}),[],!1,null,null,null);t.default=n.exports}}]);