(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{669:function(e,a,n){"use strict";n.r(a);var t=n(38),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"hub-solver-stable-baselines-gnn-common-vec-env-dummy-vec-env"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hub-solver-stable-baselines-gnn-common-vec-env-dummy-vec-env"}},[e._v("#")]),e._v(" hub.solver.stable_baselines.gnn.common.vec_env.dummy_vec_env")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Domain specification")]),e._v(" "),n("skdecide-summary")],1),e._v(" "),n("h2",{attrs:{id:"copy-obs-dict"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copy-obs-dict"}},[e._v("#")]),e._v(" copy_obs_dict")]),e._v(" "),n("skdecide-signature",{attrs:{name:"copy_obs_dict",sig:{params:[{name:"obs",annotation:"dict[str, typing.Union[numpy.ndarray, list[gymnasium.spaces.graph.GraphInstance]]]"}],return:"dict[str, typing.Union[numpy.ndarray, list[gymnasium.spaces.graph.GraphInstance]]]"}}}),e._v(" "),n("p",[e._v("Deep-copy a dict of numpy arrays.")]),e._v(" "),n("p",[e._v(":param obs: a dict of numpy arrays.\n:return: a dict of copied numpy arrays.")]),e._v(" "),n("h2",{attrs:{id:"wrap-graph-env"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wrap-graph-env"}},[e._v("#")]),e._v(" wrap_graph_env")]),e._v(" "),n("skdecide-signature",{attrs:{name:"wrap_graph_env",sig:{params:[{name:"env",annotation:"typing.Union[gymnasium.core.Env, ForwardRef('VecEnv')]"},{name:"verbose",default:"0",annotation:"<class 'int'>"},{name:"monitor_wrapper",default:"True",annotation:"<class 'bool'>"}],return:"<class 'stable_baselines3.common.vec_env.base_vec_env.VecEnv'>"}}}),e._v(" "),n("p",[e._v("Wrap environment with the appropriate wrappers if needed.")]),e._v(" "),n("p",[e._v(":param env:\n:param verbose: Verbosity level: 0 for no output, 1 for indicating wrappers used\n:param monitor_wrapper: Whether to wrap the env in a "),n("code",[e._v("Monitor")]),e._v(" when possible.\n:return: The wrapped environment.")])],1)}),[],!1,null,null,null);a.default=r.exports}}]);