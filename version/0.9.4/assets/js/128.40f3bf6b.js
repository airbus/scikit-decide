(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{639:function(a,t,e){"use strict";e.r(t);var r=e(38),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"hub-solver-cgp-cgp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hub-solver-cgp-cgp"}},[a._v("#")]),a._v(" hub.solver.cgp.cgp")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Domain specification")]),a._v(" "),e("skdecide-summary")],1),a._v(" "),e("h2",{attrs:{id:"flatten"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatten"}},[a._v("#")]),a._v(" flatten")]),a._v(" "),e("skdecide-signature",{attrs:{name:"flatten",sig:{params:[{name:"c"}]}}}),a._v(" "),e("p",[a._v("Generator flattening the structure")]),a._v(" "),e("blockquote",[e("blockquote",[e("blockquote",[e("p",[a._v('list(flatten([2, [2, "test", [4,5, [7], [2, [6, 2, 6, [6], 4]], 6]]]))\n[2, 2, "test", 4, 5, 7, 2, 6, 2, 6, 6, 4, 6]')])])])]),a._v(" "),e("h2",{attrs:{id:"norm-and-flatten"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#norm-and-flatten"}},[a._v("#")]),a._v(" norm_and_flatten")]),a._v(" "),e("skdecide-signature",{attrs:{name:"norm_and_flatten",sig:{params:[{name:"vals"},{name:"types"}]}}}),a._v(" "),e("p",[a._v("Flatten and normalise according to AIGYM type (BOX, DISCRETE, TUPLE)\n:param vals: a np array structure\n:param types: the gym type corresponding to the vals arrays\n:return: a flatten array with normalised vals")]),a._v(" "),e("h2",{attrs:{id:"norm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#norm"}},[a._v("#")]),a._v(" norm")]),a._v(" "),e("skdecide-signature",{attrs:{name:"norm",sig:{params:[{name:"vals"},{name:"types"}]}}}),a._v(" "),e("p",[a._v("Normalise according to AIGYM type (BOX, DISCRETE, TUPLE)\n:param vals: a np array structure\n:param types: the gym type corresponding to the vals arrays\n:return: array with normalised vals")]),a._v(" "),e("h2",{attrs:{id:"denorm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#denorm"}},[a._v("#")]),a._v(" denorm")]),a._v(" "),e("skdecide-signature",{attrs:{name:"denorm",sig:{params:[{name:"vals"},{name:"types"}]}}}),a._v(" "),e("p",[a._v("Denormalize values according to AIGYM types (BOX, DISCRETE, TUPLE)\n:param vals: an array of [-1,1] normalised values\n:param types: the gym types corresponding to vals\n:return: the same vals array with denormalised values")])],1)}),[],!1,null,null,null);t.default=s.exports}}]);