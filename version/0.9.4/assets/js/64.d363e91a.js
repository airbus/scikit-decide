(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{577:function(t,e,a){"use strict";a.r(e);var n=a(38),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"discrete-optimization-generic-tools-ea-ga"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discrete-optimization-generic-tools-ea-ga"}},[t._v("#")]),t._v(" discrete_optimization.generic_tools.ea.ga")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Domain specification")]),t._v(" "),a("skdecide-summary")],1),t._v(" "),a("h2",{attrs:{id:"deapselection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deapselection"}},[t._v("#")]),t._v(" DeapSelection")]),t._v(" "),a("p",[t._v("An enumeration.")]),t._v(" "),a("h2",{attrs:{id:"deapmutation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deapmutation"}},[t._v("#")]),t._v(" DeapMutation")]),t._v(" "),a("p",[t._v("An enumeration.")]),t._v(" "),a("h2",{attrs:{id:"deapcrossover"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deapcrossover"}},[t._v("#")]),t._v(" DeapCrossover")]),t._v(" "),a("p",[t._v("An enumeration.")]),t._v(" "),a("h2",{attrs:{id:"ga"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ga"}},[t._v("#")]),t._v(" Ga")]),t._v(" "),a("p",[t._v("Single objective GA")]),t._v(" "),a("p",[t._v("Args:\nproblem:\nthe problem to solve\nencoding:\nname (str) of an encoding registered in the register solution of Problem\nor a dictionary of the form {'type': TypeAttribute, 'n': int} where type refers to a TypeAttribute and n\nto the dimension of the problem in this encoding (e.g. length of the vector)\nby default, the first encoding in the problem register_solution will be used.")]),t._v(" "),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor "),a("Badge",{attrs:{text:"Ga",type:"tip"}})],1),t._v(" "),a("skdecide-signature",{attrs:{name:"Ga",sig:{params:[{name:"problem",annotation:"Problem"},{name:"mutation",default:"None",annotation:"Union[Mutation, DeapMutation]"},{name:"crossover",default:"None",annotation:"DeapCrossover"},{name:"selection",default:"None",annotation:"DeapSelection"},{name:"encoding",default:"None",annotation:"Optional[Union[str, Dict[str, Any]]]"},{name:"objective_handling",default:"None",annotation:"Optional[ObjectiveHandling]"},{name:"objectives",default:"None",annotation:"Optional[Union[str, List[str]]]"},{name:"objective_weights",default:"None",annotation:"Optional[List[float]]"},{name:"pop_size",default:"None",annotation:"int"},{name:"max_evals",default:"None",annotation:"int"},{name:"mut_rate",default:"None",annotation:"float"},{name:"crossover_rate",default:"None",annotation:"float"},{name:"tournament_size",default:"None",annotation:"float"},{name:"deap_verbose",default:"None",annotation:"bool"}]}}}),t._v(" "),a("p",[t._v("Initialize self.  See help(type(self)) for accurate signature.")])],1)}),[],!1,null,null,null);e.default=o.exports}}]);