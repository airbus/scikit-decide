CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)
PROJECT(airlaps)

OPTION(BUILD_TESTS OFF)
OPTION(ONLY_PYTHON OFF)
OPTION(BUILD_PYTHON_BINDING ON)

ENABLE_LANGUAGE(CXX)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_FLAGS "-fvisibility=hidden -fvisibility-inlines-hidden ${CMAKE_CXX_FLAGS}")

SET(LIBS "")
SET(INTERFACES "")
SET(INCLUDE_DIRS "")

# For multi-threading with C++-17
FIND_PACKAGE(TBB)
IF (TBB_FOUND)
    CMAKE_POLICY(SET CMP0075 NEW)
    SET(CMAKE_REQUIRED_LIBRARIES "${TBB_IMPORTED_TARGETS}")
    INCLUDE(CheckIncludeFileCXX)
    CHECK_INCLUDE_FILE_CXX(execution HAS_EXECUTION)
    IF (HAS_EXECUTION)
        MESSAGE ("Using C++-17 and TBB multi-threading support")
        LIST(APPEND LIBS "${TBB_IMPORTED_TARGETS}")
    ENDIF ()
    SET(CMAKE_REQUIRED_LIBRARIES "")
ENDIF ()
IF (NOT TBB_FOUND OR NOT HAS_EXECUTION)
    # Test for openmp
    FIND_PACKAGE(OpenMP)
    IF (OpenMP_CXX_FOUND)
        MESSAGE ("Using OpenMP multi-threading support")
        SET(HAS_OPENMP True)
        LIST(APPEND LIBS "OpenMP::OpenMP_CXX")
    ELSE ()
        MESSAGE ("Neither C++-17 nor OpenMP multi-threading support found: providing only single-threaded algorithms")
    ENDIF ()
ENDIF ()

# SDK

SET(BACKWARD_VERSION "1.4")
ADD_SUBDIRECTORY(sdk/backward-cpp-${BACKWARD_VERSION})
LIST(APPEND INTERFACES "Backward::Backward")

SET(JSON_VERSION "3.2.0")
SET(JSON_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/sdk/json-${JSON_VERSION}/single_include/nlohmann)
ADD_SUBDIRECTORY(sdk/json-${JSON_VERSION})
LIST(APPEND INCLUDE_DIRS "${JSON_INCLUDE_DIR}")

SET(PEGTL_VERSION "2.8.0")
SET(PEGTL_BUILD_TESTS OFF CACHE BOOL "disable PEGTL tests")
SET(PEGTL_BUILD_EXAMPLES OFF CACHE BOOL "disable PEGTL examples")
SET(PEGTL_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/sdk/PEGTL-${PEGTL_VERSION}/include/tao)
ADD_SUBDIRECTORY(sdk/PEGTL-${PEGTL_VERSION})
LIST(APPEND INCLUDE_DIRS "${PEGTL_INCLUDE_DIR}")

SET(SPDLOG_VERSION "1.3.1")
SET(SPDLOG_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/sdk/spdlog-${SPDLOG_VERSION}/include)
ADD_SUBDIRECTORY(sdk/spdlog-${SPDLOG_VERSION})
LIST(APPEND INCLUDE_DIRS "${SPDLOG_INCLUDE_DIR}")
LIST(APPEND LIBS spdlog::spdlog)

IF (BUILD_PYTHON_BINDING OR ONLY_PYTHON)
    SET(PYBIND11_VERSION "2.2.4")
    ADD_SUBDIRECTORY(sdk/pybind11-${PYBIND11_VERSION})
    LIST(APPEND INCLUDE_DIRS "${PYBIND11_INCLUDE_DIR}")
    LIST(APPEND INCLUDE_DIRS "${PYTHON_INCLUDE_DIRS}")
ENDIF ()

IF (BUILD_TESTS AND NOT ONLY_PYTHON)
    SET(CATCH2_VERSION "2.4.0")
    SET(CATCH2_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/sdk/Catch2-${CATCH2_VERSION}/single_include/catch2)
    ADD_SUBDIRECTORY(sdk/Catch2-${CATCH2_VERSION})
ENDIF()

# LIB
ADD_SUBDIRECTORY(src)


# TESTS
IF (BUILD_TESTS AND NOT ONLY_PYTHON)
    ENABLE_TESTING()  # leave it outside the 'tests' directory so ctest can find the CTestTestFile.cmake in the top build directory
    ADD_SUBDIRECTORY(tests)
ENDIF()

# CONFIG FILE
CONFIGURE_FILE(config.h.in src/config.h)
